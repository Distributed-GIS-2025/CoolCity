
services:
  
  frontend:
    build: ./frontend
    container_name: webapp
    ports:
      - "3000:3000"
    # Volumes entfernt damit Container die aktuellen Dateien verwendet
    depends_on:
      - backend  

  # valhalla (alte, fehlerhafte Konfiguration):
  # valhalla:
  #   #image: ghcr.io/valhalla/valhalla:scripted #notworking
  #   #image: ghcr.io/gis-ops/docker-valhalla:latest #not working
  #   image: ghcr.io/valhalla/valhalla-scripted:latest
  #   container_name: valhalla
  #   ports:
  #     - "8002:8002"              # Valhalla API
  #   volumes:
  #     - ./osm:/data             # berlin.osm.pbf liegt hier
  #   environment:
  #     - build_tiles=true        # Tiles beim Start aus der PBF bauen
  #     - use_tiles_ignore_pbf=false
  #     - force_rebuild=false
  #     # optional (beschleunigt Build auf Berlin-BBox):
  #     # - min_x=13.0
  #     # - min_y=52.3
  #     # - max_x=13.8
  #     # - max_y=52.7
  #   restart: unless-stopped

  # valhalla (funktionierende Konfiguration mit Berlin Mitte BBox):
  valhalla:
    image: ghcr.io/valhalla/valhalla:latest
    container_name: valhalla
    ports:
      - "8002:8002"
    volumes:
      - ./osm:/data
      - valhalla_tiles:/valhalla_tiles
    environment:
      - VALHALLA_BUILD_TILES=true
      # Berlin Mitte BBox für bessere Performance
      - min_x=13.35
      - min_y=52.50
      - max_x=13.45
      - max_y=52.55
    command: >
      bash -c "
        echo 'Checking for berlin.osm.pbf...'
        if [ ! -f /data/berlin.osm.pbf ]; then
          echo 'Downloading Berlin OSM extract...'
          wget -O /data/berlin.osm.pbf https://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf
        fi
        echo 'Setting up Valhalla configuration for Berlin Mitte...'
        mkdir -p /valhalla_tiles
        if [ ! -f /valhalla_tiles/valhalla.json ]; then
          echo 'Creating Valhalla config with BBox...'
          valhalla_build_config --mjolnir-tile-dir /valhalla_tiles --mjolnir-tile-extract /valhalla_tiles/extract.tar --mjolnir-timezone /valhalla_tiles/timezone.sqlite --mjolnir-admin /valhalla_tiles/admin.sqlite > /valhalla_tiles/valhalla.json
        fi
        if [ ! -f /valhalla_tiles/extract.tar ]; then
          echo 'Building tiles from OSM data with BBox filter...'
          valhalla_build_tiles -c /valhalla_tiles/valhalla.json /data/berlin.osm.pbf
          find /valhalla_tiles -name '*.gph' | tar cf /valhalla_tiles/extract.tar -T -
        fi
        echo 'Starting Valhalla service...'
        valhalla_service /valhalla_tiles/valhalla.json 1
      "
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: api
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app  # Live-Reload für Entwicklung
      - ./backend/data:/app/data
    environment:
      DB_DSN: "dbname=osm_data user=postgres password=postgres host=db port=5432"
    depends_on:
      - db

  db:
    image: postgis/postgis:15-3.4
    container_name: pg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: osm_data
    ports:
      - "5432:5432"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
      - ./backend/data:/data
      

volumes:
  pgdata:
  valhalla_tiles:

